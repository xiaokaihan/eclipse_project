{
  "name": "Eclipse project",
  "tagline": "eclipse中使用git的实践操作",
  "body": "# eclipse_project\r\n此项目为：eclipse上使用git的实践操作。具体操作会以blog的形式总结。\r\n\r\n环境： win7, JDK1.7，eclipse indigo, eclipse自带EGIT2.2+。\r\n##  一. 安装EGIT插件（如需）\r\n    打开eclipse，点help-----install newsoftware，名字写EGit，链接地址：http://download.eclipse.org/egit/updates，安装完毕后重启Eclipse。\r\n\r\n##  二. 配置eclipse\r\n   点击window---sharepreference---Team---Git----Configuration,在user settings栏目点击Enter Entry，添加user.name：user.xiao***和user.email user.2316***@qq.com.\r\n\r\n##  三. 关联eclipse和本地Git Repository \r\n   ① 用eclipse新建一个Java项目，在eclipse里右键点击项目---Team----share project, 点击create, 再browser选中已经建好的仓库地址（需要先建好一个本地仓库），然后name填写***；\r\n   ② 完成第一步之后，可以看到eclipse里项目名变为：***（项目名） NO HEAD，里面的文件都带有问号，表示文件处于untracked状态，还未提交。此时，原eclipse工作空间的项目文件不见了，而是转移到了Git 仓库里。\r\n\r\n##  四. github中新建一个repository \r\n   在github中新建一个repository，命名一般与本地仓库名一致（命名可以不一致）。\r\n\r\n##  五. commit到本地仓库\r\n   右键点击eclipse项目Team--commit, 写上commit message, 然后commit, commit到本地git repository之后，项目名后的NO HEAD变为了master，表示本地有分支了。\r\n\r\n## 六. pull操作（重点）\r\n    此时进行push操作，会出现一些错误（比如：master reject）。 这时应该先从执行一次pull操作（即把github上的仓库先pull到本地仓库中），然后再push。\r\n当执行pull操作时，会出现配置错误，，这时可以操作，window---preference--team---git--configuration-------------Repository Settings， 点击open，需要修改config的配置:\r\n```\r\n[core]\r\n repositoryformatversion = 0\r\n filemode = false\r\n bare = false\r\n logallrefupdates = true\r\n symlinks = false\r\n ignorecase = true\r\n hideDotFiles = dotGitOnly\r\n[remote \"origin\"]\r\n url = git@github.com:yanzi1225627/TestHello_git.git \r\n\r\nfetch = +refs/heads/*:refs/remotes/origin/*\r\n[branch \"master\"]\r\n remote = origin\r\n merge = refs/heads/master\r\n[user]\r\n name = yanzi1225627\r\n email = yanzi1225627@qq.com\r\n```\r\nnoted： 那个url地址是你在github上建库的ssh地址。使用ssh地址时，需要在github中添加一个private key. （如果使用HTTPS URL,则不需要这一步）\r\n在eclipse中获得private key方法：  _***通过eclipse里的window → preference → general → network connection → SSH2 → Key Management → generate RSA Key... → apply → save private key...，然后保存添加到github上！***_\r\n\r\n## 七. push操作\r\n    push操作在pull操作之后，team---remote---push, 接着直接使用配置好的remote repository，再add Spec,选择要push的分支（一般就是refs/heads/master），建议不要勾选force update，直接就finish，等待push操作的完成。 查看github，验证是否push成功。\r\n\r\n参考博文地址：[eclipse配置git](http://blog.csdn.net/yanzi1225627/article/details/12885317/)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}